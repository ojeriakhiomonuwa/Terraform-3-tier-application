#YAML file to apply terraform configuration to deploy infrastructure on AWS
name: Terraform Apply Pipeline
# Trigger the workflow on push to main branch or manual trigger
on:
  push:
    branches:
      - main
  workflow_dispatch:
# Ensure only one run at a time for this workflow
concurrency:
  group: terraform-deployment
  cancel-in-progress: false
# Define the job to deploy infrastructure using Terraform
jobs:
  Terraform-Infra-Deployment:
    runs-on: ubuntu-latest
    timeout-minutes: 30
# Set environment variables for AWS and Terraform
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: us-east-1
      TERRAFORM_VER: 1.12.0
      TERRAFORM_PATH: ./App
      REPO_ROOT_DIR: .
# Define the steps to checkout code, setup Terraform, and deploy infrastructure
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TERRAFORM_VER }}

      - name: Terraform format
        working-directory: ${{ env.REPO_ROOT_DIR }}
        run: terraform fmt -recursive

      - name: Terraform Init
        working-directory: ${{ env.TERRAFORM_PATH }}
        run: terraform init
      
      # # Generate terraform.tfvars dynamically
      # - name: Create Terraform Variables File
      #   working-directory: ${{ env.TERRAFORM_PATH }}
      #   run: |
      #     cat > terraform.tfvars <<EOF
      #     region                  = "${{ env.AWS_REGION }}"
      #     project_name            = "three-tier-app"
      #     vpc_cidr                = "192.168.0.0/16"
      #     pub_sub_1a_cidr         = "192.168.0.0/19"
      #     pub_sub_2b_cidr         = "192.168.32.0/19"
      #     pri_sub_3a_cidr         = "192.168.64.0/19"
      #     pri_sub_4b_cidr         = "192.168.96.0/19"
      #     pri_sub_5a_cidr         = "192.168.128.0/19"
      #     pri_sub_6b_cidr         = "192.168.160.0/19"
      #     db_username             = "${{ secrets.DB_USERNAME }}"
      #     db_password             = "${{ secrets.DB_PASSWORD }}"
      #     certificate_domain_name = "${{ vars.CERTIFICATE_DOMAIN_NAME }}"
      #     additional_domain_name  = "${{ vars.ADDITIONAL_DOMAIN_NAME }}"
      #     EOF

      - name: Terraform Validate
        working-directory: ${{ env.TERRAFORM_PATH }}
        run: terraform validate

      # - name: Terraform Plan
      #   working-directory: ${{ env.TERRAFORM_PATH }}
      #   run: |
      #     terraform plan \
      #       -var-file=terraform.tfvars \
      #       -input=false \
      #       -out=tfplan \
      #       -lock=false
            
      # - name: Terraform Apply
      #   working-directory: ${{ env.TERRAFORM_PATH }}
      #   run: |
      #     terraform apply \
      #       -input=false \
      #       -auto-approve \
      #       -lock=false \
      #       tfplan